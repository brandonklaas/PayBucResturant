/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.services;

import core.database.DatabaseAccessObject;
import core.enums.OrderStatus;
import core.enums.ProductStatus;
import core.general.Employee;
import core.general.Order;
import core.general.OrderedProducts;
import core.general.Product;
import core.general.Table;
import core.utilities.Session; 
import gui.desktop.ModernUI;
import gui.dialoguePanels.Dialogue;
import gui.dialoguePanels.OkayDialogue;
import gui.dialoguePanels.OrderCheckoutDialogue;
import gui.dialoguePanels.TransactionDialogue;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author brand
 */
public class OrdersManagementPanel extends javax.swing.JPanel {

    private Session session;
    private DatabaseAccessObject database;
    private DefaultTableModel tableModel;
    private ArrayList<Order> searchedOrders;
    private ArrayList<Employee> searchedEmployees;
    private ArrayList<Table> searchedTables;
    private ArrayList<Product> searchedProducts;
    
    private ModernUI desktop;
    
    /**
     * Creates new form Services
     */
    public OrdersManagementPanel(Session session, ModernUI desktop) {
        this.session = session;
        this.desktop = desktop;
        this.database = session.getDatabase();
        
        initComponents();
        searchDatabase();
        
        refreshTable();
    }
    
    public void searchDatabase() {
        searchedOrders    = database.getOrders();
        searchedEmployees = database.getEmployees();
        searchedTables    = database.getTables();
        searchedProducts  = database.getProducts();
    }
    
    public void refreshTable(){
        searchDatabase();
        tableModel = new DefaultTableModel();
        tableModel.addColumn("Order #");
        tableModel.addColumn("Table");
        tableModel.addColumn("Waiter");
        tableModel.addColumn("Served Items");
        tableModel.addColumn("Status");
        
        if(searchedOrders.size() > 0){
            for(Order order : searchedOrders){
                if(order.getOrderStatus() == OrderStatus.UNPAID){
                tableModel.addRow(new Object[]{order.getOrderNumber(), 
                                               ""+getTableName(order.getTableID()),
                                               ""+getEmployeeName(order.getEmployeeID()),
                                               countServedItems(order),
                                               order.getOrderStatus().toString()
                                               });
                }
            }
        }
        
        ordersTable.setModel(tableModel);
        ordersTable.repaint();
        ordersTable.validate();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        main = new javax.swing.JPanel();
        bottomButtonsPanel = new javax.swing.JPanel();
        deleteBtn = new javax.swing.JButton();
        editBtn = new javax.swing.JButton();
        payBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ordersTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();

        setPreferredSize(new java.awt.Dimension(1058, 720));
        setLayout(new java.awt.BorderLayout());

        main.setLayout(new java.awt.BorderLayout());

        bottomButtonsPanel.setBackground(new java.awt.Color(247, 249, 249));
        bottomButtonsPanel.setPreferredSize(new java.awt.Dimension(1058, 50));
        bottomButtonsPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 20, 10));

        deleteBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete.png"))); // NOI18N
        deleteBtn.setBorder(null);
        deleteBtn.setBorderPainted(false);
        deleteBtn.setContentAreaFilled(false);
        deleteBtn.setEnabled(false);
        deleteBtn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/delete-pressed.png"))); // NOI18N
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });
        bottomButtonsPanel.add(deleteBtn);

        editBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/edit.png"))); // NOI18N
        editBtn.setBorder(null);
        editBtn.setBorderPainted(false);
        editBtn.setContentAreaFilled(false);
        editBtn.setEnabled(false);
        editBtn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/edit-pressed.png"))); // NOI18N
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });
        bottomButtonsPanel.add(editBtn);

        payBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/pay.png"))); // NOI18N
        payBtn.setBorder(null);
        payBtn.setBorderPainted(false);
        payBtn.setContentAreaFilled(false);
        payBtn.setEnabled(false);
        payBtn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/pay-pressed.png"))); // NOI18N
        payBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payBtnActionPerformed(evt);
            }
        });
        bottomButtonsPanel.add(payBtn);

        main.add(bottomButtonsPanel, java.awt.BorderLayout.PAGE_END);

        ordersTable.setBackground(new java.awt.Color(255, 255, 255));
        ordersTable.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        ordersTable.setForeground(new java.awt.Color(51, 51, 51));
        ordersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Description", "Price"
            }
        ));
        ordersTable.setFillsViewportHeight(true);
        ordersTable.setGridColor(new java.awt.Color(204, 204, 204));
        ordersTable.setOpaque(false);
        ordersTable.setRowHeight(30);
        ordersTable.setSelectionBackground(new java.awt.Color(0, 204, 204));
        ordersTable.setSelectionForeground(new java.awt.Color(255, 255, 255));
        ordersTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ordersTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ordersTable);

        main.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.setBackground(new java.awt.Color(247, 249, 249));
        jPanel1.setPreferredSize(new java.awt.Dimension(20, 589));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
        );

        main.add(jPanel1, java.awt.BorderLayout.LINE_END);

        jPanel2.setBackground(new java.awt.Color(247, 249, 249));
        jPanel2.setPreferredSize(new java.awt.Dimension(20, 589));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 650, Short.MAX_VALUE)
        );

        main.add(jPanel2, java.awt.BorderLayout.LINE_START);

        jPanel3.setBackground(new java.awt.Color(247, 249, 249));
        jPanel3.setPreferredSize(new java.awt.Dimension(959, 20));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1058, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 20, Short.MAX_VALUE)
        );

        main.add(jPanel3, java.awt.BorderLayout.PAGE_START);

        add(main, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        // TODO add your handling code here:
        if(ordersTable.getSelectedRow() > -1){
            if(database.delete(searchedOrders.get(ordersTable.getSelectedRow()))){
                refreshTable();
                new OkayDialogue(null, true, "Order Deleleted Successfully");
            } else {
                new OkayDialogue(null, true, "Failed to delete Order");
            }
        } else {
            new OkayDialogue(null, true, "Select Order to delete");
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        // TODO add your handling code here:
        if(ordersTable.getSelectedRow() > -1){
            desktop.dim(true);
            new Dialogue(null, true, new OrderCheckoutDialogue(desktop, searchedOrders.get(ordersTable.getSelectedRow()), session), "Order Management", "");
            refreshTable();
            enabledState(false);
            desktop.dim(false);
        } else {
            new OkayDialogue(desktop, true, "Select Order to Edit.");
        }
        
    }//GEN-LAST:event_editBtnActionPerformed

    public void enabledState(boolean state){
        deleteBtn.setEnabled(state);
        payBtn.setEnabled(state);
        editBtn.setEnabled(state);
    }
    
    private void payBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payBtnActionPerformed
        // TODO add your handling code here:
        if(ordersTable.getSelectedRow() > -1){
            if (allServedItems(searchedOrders.get(ordersTable.getSelectedRow()))) {
                desktop.dim(true);
                new Dialogue(null, true, new TransactionDialogue(desktop, searchedOrders.get(ordersTable.getSelectedRow()), session), "Transaction Management", "");
                refreshTable();
                desktop.dim(false);
            } else {
                new OkayDialogue(desktop, true, "Not all meals on order have been served yet.");
            }
        } else {
            new OkayDialogue(desktop, true, "Select Order to Pay");
        }
    }//GEN-LAST:event_payBtnActionPerformed

    private void ordersTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ordersTableMouseClicked
        // TODO add your handling code here:
        if(ordersTable.getSelectedRow() > -1) {
            enabledState(true);
        }
    }//GEN-LAST:event_ordersTableMouseClicked

    
    public Order getOrder(String orderNumber){
        for(Order order : searchedOrders){
            if(order.getOrderNumber().equals(orderNumber)){
                return order;
            } 
        }
        return null;
    }
    
    public String getEmployeeName(int employeeID){
        for(Employee employee : searchedEmployees){
            if(employee.getId() == employeeID){
                return employee.getFirstname()+" "+employee.getLastname();
            } 
        }
        return "<None>";
    }
    
    public String getTableName(int tableID){
        for(Table table : searchedTables){
            if(table.getId() == tableID){
                return table.getTableName();
            } 
        }
        return "<None>";
    }
    
    
    public String countServedItems(Order order){
        int served = 0;
        for(OrderedProducts product : order.getProducts()){
            if(ProductStatus.fromId(product.getProductStatus()) == ProductStatus.SERVED){
                served++;
            } 
        }
        
        for(OrderedProducts pro : order.getProducts()){
            System.out.println("ID : " + pro.getId());
        }
        return served+"/"+order.getProducts().size();
    }
    
    
    public boolean allServedItems(Order order){
        int served = 0;
        for(OrderedProducts product : order.getProducts()){
            if(ProductStatus.fromId(product.getProductStatus()) == ProductStatus.SERVED){
                served++;
            } 
        }
        return (served==order.getProducts().size()) ? true : false; 
    }
    
    public String getProductName(int productID){
        for(Product product : searchedProducts){
            if(product.getId() == productID){
                return product.getName();
            } 
        }
        return "<None>";
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bottomButtonsPanel;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton editBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel main;
    private javax.swing.JTable ordersTable;
    private javax.swing.JButton payBtn;
    // End of variables declaration//GEN-END:variables
}
