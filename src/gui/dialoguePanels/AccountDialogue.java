/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui.dialoguePanels;

import core.database.DatabaseAccessObject;
import core.general.Account;
import core.general.Product;
import core.utilities.Session;
import gui.services.AccountsManagementPanel;
import gui.services.ProductManagementPanel;
import java.util.jar.Pack200;
import javax.swing.ButtonGroup;


/**
 * @author brand
 */
public class AccountDialogue extends javax.swing.JPanel {
    private Session session ;
    private DatabaseAccessObject database;
    private AccountsManagementPanel panel;
    private Dialogue diag;
    private Account selectedAccount = null;
    
    /**
     * Creates new form TransactionDialogue
     */
    public AccountDialogue(Session session, AccountsManagementPanel panel) {
        this.session = session;
        this.database = session.getDatabase();
        this.panel = panel;
        
        initComponents();
        setDefaults();
        updateBtn.setVisible(false);
    }
    

    public AccountDialogue(Session session, AccountsManagementPanel panel, Account selectedAccount) {
        this.session = session;
        this.database = session.getDatabase();
        this.panel = panel;
        this.selectedAccount = selectedAccount;
        
        initComponents();
        setDefaults();
        fillPanel();
        saveBtn.setVisible(false);
    }
    
    public void fillPanel(){
        username.setText(selectedAccount.getUsername());
        pass.setText(selectedAccount.getPassword());
        confirmPass.setText(selectedAccount.getPassword());
        admin.setSelected(selectedAccount.isAdmin());
        generalUser.setSelected(selectedAccount.isGuest());
        
        transactions.setSelected(selectedAccount.isTransactions());
        deleteTransaction.setSelected(selectedAccount.isDeleteTransactions());
        services.setSelected(selectedAccount.isServices());
        employees.setSelected(selectedAccount.isEmployees());
        settings.setSelected(selectedAccount.isSettings());
        products.setSelected(selectedAccount.isProducts());
        accounts.setSelected(selectedAccount.isAccounts());
    }
    
    
    void setDialogue(Dialogue dialogue) {
        diag = dialogue;
    }
    
    private void setDefaults() {
        ButtonGroup bg = new ButtonGroup();
        bg.add(admin);
        bg.add(generalUser);
    }

    public void clearPanels(){
        username.setText("");
        pass.setText("");
        confirmPass.setText("");
        admin.setSelected(false);
        generalUser.setSelected(false);
        
        transactions.setSelected(false);
        services.setSelected(false);
        employees.setSelected(false);
        settings.setSelected(false);
        products.setSelected(false);
        accounts.setSelected(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        confirmPass = new javax.swing.JPasswordField();
        pass = new javax.swing.JPasswordField();
        generalUser = new javax.swing.JRadioButton();
        admin = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        accounts = new javax.swing.JCheckBox();
        transactions = new javax.swing.JCheckBox();
        services = new javax.swing.JCheckBox();
        employees = new javax.swing.JCheckBox();
        settings = new javax.swing.JCheckBox();
        products = new javax.swing.JCheckBox();
        deleteTransaction = new javax.swing.JCheckBox();
        buttonsPanel = new javax.swing.JPanel();
        saveBtn = new javax.swing.JButton();
        updateBtn = new javax.swing.JButton();
        cancelBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMaximumSize(new java.awt.Dimension(1000, 1000));
        setMinimumSize(new java.awt.Dimension(400, 400));
        setOpaque(false);
        setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Account Type :");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(40, 200, 100, 20);

        jLabel4.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Username :");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(40, 70, 100, 16);
        jPanel1.add(jSeparator1);
        jSeparator1.setBounds(20, 40, 600, 10);

        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Account  Info");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(18, 16, 290, 16);

        jLabel5.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Password :");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(40, 110, 100, 16);
        jPanel1.add(username);
        username.setBounds(170, 60, 270, 24);

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Confirm Password :");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(40, 150, 120, 16);
        jPanel1.add(confirmPass);
        confirmPass.setBounds(170, 150, 270, 22);
        jPanel1.add(pass);
        pass.setBounds(170, 110, 270, 22);

        generalUser.setText("General User");
        jPanel1.add(generalUser);
        generalUser.setBounds(310, 190, 120, 28);

        admin.setText("Administrator");
        admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adminActionPerformed(evt);
            }
        });
        jPanel1.add(admin);
        admin.setBounds(170, 190, 120, 28);

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Account  Access");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(30, 270, 290, 16);
        jPanel1.add(jSeparator2);
        jSeparator2.setBounds(30, 290, 600, 10);

        accounts.setText("Accounts");
        jPanel1.add(accounts);
        accounts.setBounds(50, 520, 150, 24);

        transactions.setText("Transactions");
        jPanel1.add(transactions);
        transactions.setBounds(50, 320, 150, 24);

        services.setText("Services");
        jPanel1.add(services);
        services.setBounds(50, 360, 150, 24);

        employees.setText("Employees");
        jPanel1.add(employees);
        employees.setBounds(50, 400, 150, 24);

        settings.setText("Settings");
        jPanel1.add(settings);
        settings.setBounds(50, 440, 150, 24);

        products.setText("Products");
        jPanel1.add(products);
        products.setBounds(50, 480, 150, 24);

        deleteTransaction.setText("Is User allowed to delete Transactions");
        jPanel1.add(deleteTransaction);
        deleteTransaction.setBounds(310, 320, 280, 24);

        add(jPanel1, java.awt.BorderLayout.CENTER);

        buttonsPanel.setPreferredSize(new java.awt.Dimension(10, 45));
        buttonsPanel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        saveBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/save.png"))); // NOI18N
        saveBtn.setBorder(null);
        saveBtn.setBorderPainted(false);
        saveBtn.setContentAreaFilled(false);
        saveBtn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/save-pressed.png"))); // NOI18N
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });
        buttonsPanel.add(saveBtn);

        updateBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/update.png"))); // NOI18N
        updateBtn.setBorder(null);
        updateBtn.setBorderPainted(false);
        updateBtn.setContentAreaFilled(false);
        updateBtn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/update-pressed.png"))); // NOI18N
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });
        buttonsPanel.add(updateBtn);

        cancelBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/cancel.png"))); // NOI18N
        cancelBtn.setBorder(null);
        cancelBtn.setBorderPainted(false);
        cancelBtn.setContentAreaFilled(false);
        cancelBtn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/cancel-pressed.png"))); // NOI18N
        cancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBtnActionPerformed(evt);
            }
        });
        buttonsPanel.add(cancelBtn);

        add(buttonsPanel, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // TODO add your handling code here:
        if(username.getText().isEmpty() == false && new String(pass.getPassword()).equals(new String(confirmPass.getPassword()))){
            Account account = new Account();
            account.setUsername(username.getText());
            account.setPassword(new String(pass.getPassword()));

            account.setAdmin(admin.isSelected());
            account.setGuest(generalUser.isSelected());
            account.setTransactions(transactions.isSelected());
            account.setDeleteTransactions(deleteTransaction.isSelected());
            account.setServices(services.isSelected());
            account.setEmployees(employees.isSelected());
            account.setSettings(settings.isSelected());
            account.setProducts(products.isSelected());
            account.setAccounts(accounts.isSelected());
            

            if (database.insert(account)) {
                new OkayDialogue(null, true, "Account saved successfully");
                clearPanels();
                panel.refreshTable();
            } else {
                new OkayDialogue(null, true, "Failed to save Account");
            }
            
        } else {
            new OkayDialogue(null, true, "Fill in all fields and confirm is passwords match");
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed
        // TODO add your handling code here:
    if(username.getText().isEmpty() == false && new String(pass.getPassword()).equals(new String(confirmPass.getPassword()))){
            Account account = new Account();
            account.setUsername(username.getText());
            account.setPassword(new String(pass.getPassword()));

            account.setAdmin(admin.isSelected());
            account.setGuest(generalUser.isSelected());
            account.setTransactions(transactions.isSelected());
            account.setDeleteTransactions(deleteTransaction.isSelected());
            account.setServices(services.isSelected());
            account.setEmployees(employees.isSelected());
            account.setSettings(settings.isSelected());
            account.setProducts(products.isSelected());
            account.setAccounts(accounts.isSelected());
            account.setId(selectedAccount.getId());
            

            if (database.update(account)) {
                diag.dispose();
                panel.refreshTable();
                new OkayDialogue(null, true, "Account updated successfully");
            } else {
                new OkayDialogue(null, true, "Failed to update Account");
            }
            
        } else {
            new OkayDialogue(null, true, "Fill in all fields and confirm is passwords match");
        }
    }//GEN-LAST:event_updateBtnActionPerformed

    private void cancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBtnActionPerformed
        // TODO add your handling code here:
        this.diag.dispose();
    }//GEN-LAST:event_cancelBtnActionPerformed

    private void adminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adminActionPerformed
        // TODO add your handling code here:
        if(admin.isSelected()){
            transactions.setSelected(true);
            employees.setSelected(true);
            settings.setSelected(true);
            accounts.setSelected(true);
            services.setSelected(true);
            products.setSelected(true); 
        }
    }//GEN-LAST:event_adminActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox accounts;
    private javax.swing.JRadioButton admin;
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JButton cancelBtn;
    private javax.swing.JPasswordField confirmPass;
    private javax.swing.JCheckBox deleteTransaction;
    private javax.swing.JCheckBox employees;
    private javax.swing.JRadioButton generalUser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPasswordField pass;
    private javax.swing.JCheckBox products;
    private javax.swing.JButton saveBtn;
    private javax.swing.JCheckBox services;
    private javax.swing.JCheckBox settings;
    private javax.swing.JCheckBox transactions;
    private javax.swing.JButton updateBtn;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables

}
